{"prompt": "", "completion": "\"Luther\" is a series about righteous indignation. Yes, it's a police drama, a dark (sometimes ludicrously so) crime saga set in a moody London with a greater and grimmer murder rate to equal that of other bleak procedurals.\nYes, it's a police drama, a dark (sometimes ludicrously so) crime saga set in a moody version of London with a greater and grimmer murder rate to equal that of other bleak procedurals. But the satisfaction of seeing those cases solved, those murderers and kidnappers caught, is muted, secondary to the suffering and sacrifice and validation of protagonist John Luther, the detective played by Idris Elba with a staggering display of movie star charisma that seems like it ought to produce static shocks with everything with which he comes into contact. Luther's devoted to his job with an obsessiveness that's destroying him, that, as the series began in 2010, had ended his marriage and eaten him up inside, changing him. He's good at what he does, if prone to extremes, and yet he seems to be perpetually doubted, maligned and hurt because of it.\nIn season one, Luther was framed for the murder of his beloved wife and forced to run from his fellow officers, and it's not the only time in the series he's a suspect. In season two he's treated like a certain career contaminant by a new, ambitious, by-the-books officer assigned to report to him. And in the four-episode third season airing on BBC America from September 3 through 6, that former colleague, DS Erin Gray (Nikki Amuka-Bird), is targeting him as part of an investigation of police corruption with DSU George Stark (David O'Hara), who may be a little obsessive himself. Aside from his sidekick DS Justin Ripley (Warren Brown), few seem to appreciate Luther and his incredible abilities -- instead, he's infamous, the rest of the police force apparently all too able of believing he's capable of dark things.\nWe, as viewers, don't, because of Idris Elba. John Luther is Elba's best role since that of the fascinatingly savvy Stringer Bell in \"The Wire,\" because it showcases the actor's utterly assured presence, his air of rakishly rumpled confidence in his tweed coat. Luther does not have swagger, he has conviction, conviction that informs his every -- frequently correct -- move. It's why it's so easy to trust him in a way that the characters working with him don't, and not without reason. When the series began in 2010, it was with Luther letting a pedophile fall to what could have been his death after extracting from him information about the location of the girl he'd kidnapped. It didn't doom his career -- he got lucky -- but he hasn't really changed. He even threatens a suspect with a similar fate toward the start of the new season -- but the move doesn't come across as harsh. We're more worried, when it happens, that it'll get him in trouble again.\n\"Luther\" is mesmerizing because of Elba, and because the show is so consumed by his performance that it becomes not one about a maverick cop but instead one of a man outpacing the justice system he's allegedly a part of, one that hampers him with its pesky rules, its politics and its skeptics. It encourages us to buy into his worldview, in which he should just be allowed to do his job and get justice done, though that may mean covering up crimes or allowing culprits he's judged deserving to go free -- like Alice Morgan (Ruth Wilson), his psychopathic superhero of a friend, and a wonderful, preposterous character who's essentially too enjoyable to be locked up. Luther's tactics make him so dangerous to the people around him that the case Stark tries to build against him is based on the peripheral body count rather than evidence, and when, in the new season, he starts a tentative romance with Mary Day (Sienna Guillory), a woman another character dismissively sums up as a \"pixie,\" it's accompanied by a sense of dread.\nThe series comes close to confronting the nature of its protagonist in the new season, introducing a grieving man who turns to vigilanteism and gathers public support for his actions as he starts targeting rapists and killers who've gotten off lightly. Confronting Luther on opposite sides of a canal, the man says \"One out of five murders are committed by men on bail,\" and demands to know why nothing is being done about it. \"It's complicated,\" Luther replies. \"No, it's not,\" says the man. \"No... it's not. You've got me there,\" Luther admits. The difference is that, while Luther may bend the rules to fit his ideas about crime and punishment, he doesn't do so looking for outside approval the way the antagonist he's facing down does -- the opposite, really. Instead, it's the viewers who seethe on his behalf and yearn for his efforts to continue, and it's that conflicting emotion far more than the procedural aspects that lifts \"Luther\" above the plethora of similarly lurid recent dark crime dramas it resembles."}
{"prompt": "", "completion": "jOOQ on The ORM Foundation?\nI am the developer of jOOQ, a Java database abstraction framework. I was wondering whether jOOQ might be an interesting tool for discussion on your website, even if it is not exactly an ORM in the classic meaning (as in mapping objects to the relational world > ORM). Instead, jOOQ uses a reverse engineering paradigm (as in mapping relational entities to objects > \"ROM\").\nRe: jOOQ on The ORM Foundation?\nObject Role Modeling (the original ORM) is not the same thing as Object/Relational Mapping.\nYour query DSL looks rather like some of the DSLs available for Ruby, such as through the Sequel gem, or Arel. Interesting to see how well that can work with a statically-types language like Java. Maybe you or I should make a generator for ActiveFacts which generates your DSL from CQL queries?\nRe: jOOQ on The ORM Foundation?\nSorry for my late reply. Apparently I had not really understood the ideas behind your foundation when I wrote my original post. I understand now, that you are concerned with broader concepts than the \"common ORM\". I actually came across your group because of your linking to ORM Lite (where ORM does stand for Object/Relational Mapping, correct me if I'm wrong).\nYes, I have seen some examples for Ruby's Sequel. I personally find statically-typed languages much better for DSL's as the syntax can be formally defined and checked by a compiler - with the limitations an OO language imposes, of course.\nSo if I understand this correctly now, \"Object Role Modeling\" and CQL are actually a more general way of expressing what SQL calls DDL. Since you can already transform CQL into SQL DDL statements (CREATE TABLE...), and jOOQ can reverse-engineer database schemata into jOOQ generated source code, I don't think there would be need for an additional generator.\nRe: jOOQ on The ORM Foundation?\nObject Role Modeling was named before Object Relational Mapping, but the latter is now the more common meaning, as you point out. But ORM Lite is actually so-named by Bryan because it is an implementation of Object Role Modeling, not because it is also an O/RM. Bryan was a student of Terry's at Neumont, where he learnt ORM.\nRegarding DSLs, I think internal DSLs only work well in very simple cases. I prefer external DSLs for anything complex, and that's where CQL came from. Even the extremely flexible syntax of Ruby wasn't up to the task.\nThis may be hard to see for someone used to O-O modeling, and who's authored an O/RM tool. The problem is that O-O suffers from many of the same problems of loss of semantics. The apparently clear notion of \"attribute\" breaks down when you look at it closely. O-O, although ostensibly behaviour-oriented, introduces attributes to store state, and this attribute orientation is the source of the problem in both cases. Fact-oriented model does not use attributes. Although it may seem obvious that, for example, my surname is an attribute of myself, if the system being modeled accrues the requirement to model families, suddenly surname becomes an attribute of family, and family becomes my attribute. This kind of instability is responsible for much of the rework that's required in evolving legacy systems, as well as many of the mistakes made when they were first modeled. If you want a further example of this loss of semantics, look at my Insurance example, and ask yourself why the VehicleIncident table has a DrivingBloodTestResult column. In fact, if VehicleIncident wasn't explicitly mapped separately, its fields would be in the Claim table.\nWhat's needed is not just yet another O/RM tool (which are tuppence a dozen anyhow - I personally have written three) but a tool which supports database programming using only the conceptual model, never exposing the physical model. Surprisingly, I can't think of a single tool which has done a good job of this, but it's where I'm heading with the ActiveFacts API. It's another O/RM, but using a purely conceptual object model that preserves the domain semantics, not a typical O-O one.\nYes, though the published implementation doesn't quite handle the full query syntax (aggregate functions are still missing), nor does it yet translate them to SQL. Some examples are given towards the end of the video presentation on the CQL Introduction page.\nRe: jOOQ on The ORM Foundation?\nRegarding DSLs, I think internal DSLs only work well in very simple cases. I prefer external DSLs for anything complex, and that's where CQL came from. Even the extremely flexible syntax of Ruby wasn't up to the task.\nAbsolutely. The optimal way to implement SQL in Java would be by extending the Java language itself, such that SQL would be compiled natively by the java compiler, similar to Linq2SQL in C#, or PL/SQL in Oracle databases. So for the complexity of CQL, CQL is certainly the right solution.\nThe problem is that a huge amount of meaning is lost in the mapping to SQL. SQL is practically (though not theoretically) limited to representing physical models.\nIn any case, I don't see jOOQ as a means to solve modelling issues, or the O/R impedance mismatch (which is even bigger when it comes to mapping your understanding of ORM, with CQL). jOOQ should simply make using the full power of SQL in Java as simple as possible. In that way, jOOQ is not really an ORM because it does not map from objects to the relational world, or try to solve any other high-level abstraction issues. It's really a low-level tool to make a developer's life a lot easier, seeing that unfortunately, JPA CriteriaQuery didn't meet the community's expectations.\nWhat's needed is not just yet another O/RM tool (which are tuppence a dozen anyhow - I personally have written three) but a tool which supports database programming using only the conceptual model, never exposing the physical model. Surprisingly, I can't think of a single tool which has done a good job of this, but it's where I'm heading with the ActiveFacts API. It's another O/RM, but using a purely conceptual object model that preserves the domain semantics, not a typical O-O one.\nI think you're on the right track with this. I hope for you, that this will soon show nice results with a practical implementation. I'm curious to see how you'll tackle performance issues, too, with all the abstraction. Among all attempts to overcome the old and proven relational models (XML databases, NoSQL databases), this one seems the most promising and focused to me!"}
{"prompt": "", "completion": "1. A stock is expected to pay a year-end dividend of $2.00, i.e., D1 = $2.00. The dividend is expected to decline at a rate of 5% a year forever (g = -5%). If the company\u2019s expected and required rate of return is 15%, which of the following statements is CORRECT?\na. The company\u2019s current stock price is $20.\nb. The company\u2019s dividend yield 5 years from now is expected to be 10%.\nc. The constant growth model cannot be used because the growth rate is negative.\nd. The company\u2019s expected capital gains yield is 5%.\ne. The company\u2019s stock price next year is expected to be $9.50.\n2. A share of common stock has just paid a dividend of $2.00. If the expected long-run growth rate for this stock is 2.0%, and if investors' required rate of return is 10.5%, what is the stock\u2019s intrinsic value?\n3. E. M. Roussakis Inc.'s stock currently sells for $50 per share. The stock\u2019s dividend is projected to increase at a constant rate of 4% per year. The required rate of return on the stock, rs, is 15.50%. What is Roussakis' expected price 5 years from now?\n4. Carter's preferred stock pays a dividend of $2.00 per quarter. If the price of the stock is $60.00, what is its nominal (not effective) annual expected rate of return?\n5. Schnusenberg Corporation just paid a dividend of $1.25 per share, and that dividend is expected to grow at a constant rate of 7.00% per year in the future. The company's beta is 1.35, the required return on the market is 10.50%, and the risk-free rate is 4.00%. What is the intrinsic value for Schnusenberg\u2019s stock?\n6. Rentz RVs Inc. (RRV) is presently enjoying relatively high growth because of a surge in the demand for recreational vehicles. Management expects earnings and dividends to grow at a rate of 30% for the next 4 years, after which high gas prices will probably reduce the growth rate in earnings and dividends to zero, i.e., g = 0. The company\u2019s last dividend, D0, was $1.25. RRV\u2019s beta is 1.20, the market risk premium is 5.25%, and the risk-free rate is 3.00%. What is the intrinsic value of RRV\u2019s common stock?\n7. Using the information on Rentz RVs Inc. from problem 6, what is the dividend yield expected for the next year?\n8. The Wei Company's last paid dividend was $2.75. The dividend growth rate is expected to be constant at 2.50% for 2 years, after which dividends are expected to grow at a rate of 8.00% forever. Wei\u2019s required return (rs) is 12.00%. What is the intrinsic value of Wei's stock?\n10. You are an analyst studying Beranek Technologies, which was founded 10 years ago. It has been profitable for the last 5 years, but it has needed all of its earnings to support growth and thus has never paid a dividend. Management has indicated that it plans to pay a $0.50 dividend 3 years from today, then to increase it at a relatively rapid rate for 2 years with 50% dividend growth in year 4 and 25% dividend growth in year 5, and then to increase its dividend at a constant growth rate of 6.00% per year thereafter. Assuming a required return of 15.00%, what is your estimate of the intrinsic value of Beranek's stock?"}
